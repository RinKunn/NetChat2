<Window x:Class="NetChat2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:vm="clr-namespace:NetChat2.ViewModel"
        xmlns:convrt="clr-namespace:NetChat2.Converters"
        xmlns:local="clr-namespace:NetChat2"
        d:DataContext="{d:DesignInstance Type=vm:MainViewModel, IsDesignTimeCreatable=False}"
        mc:Ignorable="d"
        Background="Green"
        Title="Netchat 2.0" Height="450" Width="800"
        Style="{StaticResource CustomWindowStyle}"
        >
    <i:Interaction.Triggers>
        <i:EventTrigger>
            <i:InvokeCommandAction Command="{Binding ConnectCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding LogoutCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger>
            <i:InvokeCommandAction Command="{Binding ConnectCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>

        <convrt:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" True="Collapsed" False="Visible"/>
        
        <Style x:Key="SendButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="#00000000">
                            <materialDesign:PackIcon Name="SendIcon" Kind="Send" SnapsToDevicePixels="True"
                                                     Foreground="{TemplateBinding Foreground}"
                                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                     Margin="{TemplateBinding Padding}" Width="Auto" Height="Auto"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" TargetName="SendIcon" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Foreground" TargetName="SendIcon" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="MessagesDataTemplate">
            <Border Name="MessageBorder" MinHeight="40" MinWidth="280" BorderThickness="1" Background="#EFEBE9" 
                    Margin="10,0,60,10" BorderBrush="#BCAAA4" CornerRadius="4" SnapsToDevicePixels="True"
                    HorizontalAlignment="Left">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition Height="15"/>
                    </Grid.RowDefinitions>
                    
                    <TextBlock Grid.Row="0" Margin="7,5,7,0" 
                               VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                               Text="{Binding Username}"/>

                    <TextBlock x:Name="MessageTxtBlock" Grid.Row="1" Margin="7,5,7,0" TextWrapping="Wrap" 
                               VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                               Text="{Binding Text}"/>
                    
                    <TextBlock Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Stretch"
                               Margin="0,0,5,0" FontSize="10" Opacity="0.8"
                               Text="{Binding DateTime, StringFormat={}{0:t}}"/>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Text}" Value="{x:Null}">
                    <Setter TargetName="MessageTxtBlock" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="MessageBorder" Property="MaxWidth" Value="320"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <Style x:Key="IndicatorButStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Panel.ZIndex" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel>
                            <Ellipse x:Name="EllipseIndicator" Width="10" Height="10" Fill="Red"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                <Setter TargetName="EllipseIndicator" Property="Fill" Value="Green"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NewMessagesCount" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="15"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse Fill="{TemplateBinding Background}" Width="40" Height="40"/>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <Polygon Fill="{TemplateBinding Background}" Points="0 0 34 0 18 20" 
                                     HorizontalAlignment="Center" VerticalAlignment="Bottom"
                                     Margin="0 0 0 -10"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Window.Resources>
    
    
    <Grid Background="Gray">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Button Style="{StaticResource IndicatorButStyle}" Command="{Binding LogoutCommand}" />
        
        <!--Messages-->
        <ItemsControl x:Name="MessagesItemsCtrl" Grid.Column="1" Margin="0,5,0,0" 
                      ItemsSource="{Binding Messages}" 
                      ItemTemplate="{DynamicResource MessagesDataTemplate}"
                      ScrollViewer.VerticalScrollBarVisibility="Auto">
            <i:Interaction.Behaviors>
                <convrt:BringNewItemIntoViewBehavior/>
            </i:Interaction.Behaviors>
            <ItemsControl.Template>
                <ControlTemplate TargetType="ItemsControl">
                    <Grid>
                        <ScrollViewer HorizontalScrollBarVisibility="Auto">
                            <ItemsPresenter/>
                        </ScrollViewer>
                        <Border Background="Gray" Opacity="0.8" Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="Loading..." VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="17"/>
                        </Border>
                        <Button Style="{StaticResource NewMessagesCount}" VerticalAlignment="Bottom" 
                                HorizontalAlignment="Right" Background="Orange"
                                Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </ItemsControl.Template>
        </ItemsControl>

        <Border Grid.Row="1" SnapsToDevicePixels="True"
                BorderBrush="{DynamicResource MaterialDesignDivider}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="50"/>
                </Grid.ColumnDefinitions>
                
                <!--Message-->
                <Border Margin="10,10,0,10" MaxHeight="80"
                        BorderThickness="1" BorderBrush="{DynamicResource MaterialDesignDivider}">
                    <TextBox x:Name="MessageTxtBox" BorderBrush="Transparent"
                                 TextWrapping="Wrap" AcceptsReturn="True" CaretBrush="#7F000000"
                                 VerticalScrollBarVisibility="Auto"
                                 Text="{Binding TextMessage, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding SendMessageCommand}"/>
                        </TextBox.InputBindings>
                    </TextBox>
                </Border>
                
                <!--Send-->
                <Button x:Name="SendButton" Grid.Column="1" Margin="10"
                        Style="{DynamicResource SendButtonStyle}"
                        Command="{Binding SendMessageCommand}"/>
            </Grid>
        </Border>
    </Grid>
</Window>
